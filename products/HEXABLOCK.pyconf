default :
{
    name : "HEXABLOCK"
    build_source : "cmake"
    get_source : "git"
    git_info:
    {
        repo : $PROJECTS.projects.salome.git_info.default_git_server + "modules/hexablock.git"
        repo_dev : $PROJECTS.projects.salome.git_info.default_git_server_dev + "hexablock.git"
    }
    environ :
    {
        _SMESH_MeshersList : "HEXABLOCKPlugin"
        SalomeAppConfig_ : $install_dir + $VARS.sep + "share" + $VARS.sep + "salome" + $VARS.sep + "resources" + $VARS.sep + "hexablock"
    }
    depend : [
             "KERNEL", 
             "GUI", 
             "GEOM",
             "boost", 
             "CAS", 
             "Python", 
             "omniORB", 
             "qt", 
             "ParaView", 
             "docutils", 
             "libxml2", 
             "Sphinx", 
             "Jinja2", 
             "setuptools", 
             "Pygments", 
             "six", 
             "pytz",    
             "markupsafe" 
              ]
    build_depend : ["cmake", "cppunit"]
    source_dir : $APPLICATION.workdir + $VARS.sep + 'SOURCES' + $VARS.sep + $name
    build_dir : $APPLICATION.workdir + $VARS.sep + 'BUILD' + $VARS.sep + $name
    properties:
    {
        has_salome_gui : "yes"
        is_SALOME_module : "yes"
        has_unit_tests
    }
} 

default_MPI :
{
    name : "HEXABLOCK"
    build_source : "cmake"
    cmake_options : "-DSALOME_USE_MPI=ON -DCMAKE_CXX_COMPILER:STRING=${MPI_ROOT_DIR}/bin/mpic++ -DCMAKE_C_COMPILER:STRING=${MPI_ROOT_DIR}/bin/mpicc"
    get_source : "git"
    git_info:
    {
        repo : $PROJECTS.projects.salome.git_info.default_git_server + "modules/hexablock.git"
        repo_dev : $PROJECTS.projects.salome.git_info.default_git_server_dev + "hexablock.git"
    }
    environ :
    {
    }
    depend : [
             "KERNEL", 
             "GUI", 
             "GEOM",
             "boost", 
             "CAS", 
             "Python", 
             "omniORB", 
             "qt", 
             "ParaView", 
             "docutils", 
             "libxml2", 
             "Sphinx", 
             "Jinja2", 
             "setuptools", 
             "Pygments", 
             "six", 
             "pytz",    
             "markupsafe",
             "openmpi"
              ]
    build_depend : ["cmake", "cppunit"]
    source_dir : $APPLICATION.workdir + $VARS.sep + 'SOURCES' + $VARS.sep + $name
    build_dir : $APPLICATION.workdir + $VARS.sep + 'BUILD' + $VARS.sep + $name
    properties:
    {
        has_salome_gui : "yes"
        is_SALOME_module : "yes"
        has_unit_tests
    }
} 

