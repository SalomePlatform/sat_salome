diff -Naur NETGENPLUGIN_ref/src/NETGENPlugin/NETGENPlugin_NETGEN_3D.cxx NETGENPLUGIN_dev/src/NETGENPlugin/NETGENPlugin_NETGEN_3D.cxx
--- NETGENPLUGIN_ref/src/NETGENPlugin/NETGENPlugin_NETGEN_3D.cxx	2023-05-25 16:30:06.119261933 +0200
+++ NETGENPLUGIN_dev/src/NETGENPlugin/NETGENPlugin_NETGEN_3D.cxx	2023-05-25 16:21:37.764903074 +0200
@@ -259,7 +259,7 @@
       if ( elem->NbCornerNodes() != 3 ){
         return error( COMPERR_BAD_INPUT_MESH, "Not triangle element encounters");
       }
-      listElements[elem] = tuple(isRev, isInternalFace);
+      listElements[elem] = tuple<bool, bool>(isRev, isInternalFace);
     }
   }
 
diff -Naur NETGENPLUGIN_ref/src/NETGENPlugin/NETGENPlugin_NETGEN_3D_SA.cxx NETGENPLUGIN_dev/src/NETGENPlugin/NETGENPlugin_NETGEN_3D_SA.cxx
--- NETGENPLUGIN_ref/src/NETGENPlugin/NETGENPlugin_NETGEN_3D_SA.cxx	2023-05-25 16:30:06.119261933 +0200
+++ NETGENPLUGIN_dev/src/NETGENPlugin/NETGENPlugin_NETGEN_3D_SA.cxx	2023-05-25 16:17:57.350145584 +0200
@@ -392,7 +392,7 @@
     // Get orientation
     // Netgen requires that all the triangle point outside
     isRev = elemOrientation[elem->GetID()];
-    listElements[elem] = tuple(isRev, false);
+    listElements[elem] = tuple<bool, bool>(isRev, false);
   }
 
   return false;
