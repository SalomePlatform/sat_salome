diff --git a/module_generator/hxx_tmpl.py b/module_generator/hxx_tmpl.py
index 48b7552..328b345 100644
--- a/module_generator/hxx_tmpl.py
+++ b/module_generator/hxx_tmpl.py
@@ -25,7 +25,7 @@ except:
 cxxCompo="""
 // this cxx file was generated by yacsgen
 #include "${component}_i.hxx"
-#include "${component}.hxx"
+#include "${hxxfile}"
 using namespace std;
 #include <string>
 #include <vector>
diff --git a/module_generator/hxx_tmpl_gui.py b/module_generator/hxx_tmpl_gui.py
index cc5eff8..fae982f 100644
--- a/module_generator/hxx_tmpl_gui.py
+++ b/module_generator/hxx_tmpl_gui.py
@@ -58,10 +58,10 @@ ${component_name}GUI::${component_name}GUI() :
 }
 
 // Gets a reference to the module's engine
-${component_name}_ORB::${component_name}_Gen_ptr ${component_name}GUI::Init${component_name}Gen( SalomeApp_Application* app )
+${module_name}_ORB::${component_name}_Gen_ptr ${component_name}GUI::Init${component_name}Gen( SalomeApp_Application* app )
 {
   Engines::EngineComponent_var comp = app->lcc()->FindOrLoad_Component( "FactoryServer",COMPONENT_NAME );
-  ${component_name}_ORB::${component_name}_Gen_ptr clr = ${component_name}_ORB::${component_name}_Gen::_narrow(comp);
+  ${module_name}_ORB::${component_name}_Gen_ptr clr = ${module_name}_ORB::${component_name}_Gen::_narrow(comp);
   ASSERT(!CORBA::is_nil(clr));
   return clr;
 }
@@ -149,7 +149,7 @@ void ${component_name}GUI::OnMyNewItem()
 void ${component_name}GUI::OnCallAction()
 {
   // Create a ${component_name} component
-  ${component_name}_ORB::${component_name}_Gen_ptr ${component_name}gen = ${component_name}GUI::Init${component_name}Gen( getApp() );
+  ${module_name}_ORB::${component_name}_Gen_ptr ${component_name}gen = ${component_name}GUI::Init${component_name}Gen( getApp() );
   
   // Do the job...
   //
@@ -256,7 +256,7 @@ hxxgui_h="""
 #include <SalomeApp_Module.h>
 
 #include <SALOMEconfig.h>
-#include CORBA_CLIENT_HEADER(${component_name})
+#include CORBA_CLIENT_HEADER(${module_name})
 
 class SalomeApp_Application;
 class ${component_name}GUI: public SalomeApp_Module
@@ -270,7 +270,7 @@ public:
   QString engineIOR() const;
   void    windows( QMap<int, int>& ) const;
 
-  static ${component_name}_ORB::${component_name}_Gen_ptr Init${component_name}Gen( SalomeApp_Application* );
+  static ${module_name}_ORB::${component_name}_Gen_ptr Init${component_name}Gen( SalomeApp_Application* );
 
   virtual void                createPreferences();
   virtual void                preferencesChanged( const QString&, const QString& );
diff --git a/module_generator/hxxcompo.py b/module_generator/hxxcompo.py
index 46d2f13..b042ad7 100644
--- a/module_generator/hxxcompo.py
+++ b/module_generator/hxxcompo.py
@@ -54,11 +54,15 @@ class HXX2SALOMEComponent(Component):
                  matches.append(os.path.join(path, filename))
         return matches
 
+    assert cpplib[:3]=='lib' and cpplib[-3:]=='.so',\
+           'Error, library name %s does not conform to lib<name>.so pattern' 
+    cpplibname=cpplib[3:-3]
     hxxfileful = search_file(hxxfile,cpp_path)
     cpplibful = search_file(cpplib,cpp_path)
     format_error = 'Error in HXX2SALOMEComponent : file %s not found in %s'
     assert len(hxxfileful) > 0, format_error %  (hxxfile, cpp_path)
     assert len(cpplibful) > 0, format_error % (cpplib, cpp_path)
+    self.hxxfile=hxxfile  # store it for cxxCompo template
     hxxfile = hxxfileful[0]
     cpplib = cpplibful[0]
 
@@ -304,8 +308,8 @@ class HXX2SALOMEComponent(Component):
            body=code,
            ) )
 
-    Includes = os.path.join(cpp_path, "include")
-    Libs = [ Library( name=name+"CXX", path=os.path.join(cpp_path, "lib"))]
+    Includes = os.path.dirname(hxxfile)
+    Libs = [ Library( name=cpplibname, path=os.path.dirname(cpplib))]
     Compodefs=""
     Inheritedclass=""
     self.inheritedconstructor=""
@@ -438,28 +442,30 @@ class HXX2SALOMEComponent(Component):
                            parameters=gen.makeArgs(serv),
                            body=serv.body % {"module":gen.module.name+"_ORB"} )
       services.append(service)
-    return cxxCompo.substitute(component=self.name, 
+    return cxxCompo.substitute(component=self.name, hxxfile=self.hxxfile, 
                                inheritedconstructor=self.inheritedconstructor,
                                servicesdef="\n".join(defs),
                                servicesimpl="\n".join(services))
 
 # ------------------------------------------------------------------------------
-  def getGUIfilesTemplate(self):
+  def getGUIfilesTemplate(self, module_name):
       """generate in a temporary directory files for a generic GUI, 
          and return a list with file names.
          it is the responsability of the user to get rid 
          of the temporary directory when finished
       """
-      gui_cxx=hxxgui_cxx.substitute(component_name=self.name)
-      gui_h=hxxgui_h.substitute(component_name=self.name)
+      gui_cxx=hxxgui_cxx.substitute(component_name=self.name, 
+                                    module_name=module_name)
+      gui_h=hxxgui_h.substitute(component_name=self.name, 
+                                module_name=module_name)
       gui_icon_ts=hxxgui_icon_ts.substitute(component_name=self.name)
       gui_message_en=hxxgui_message_en.substitute(component_name=self.name)
       gui_message_fr=hxxgui_message_fr.substitute(component_name=self.name)
       gui_config=hxxgui_config.substitute(component_name=self.name)
       gui_xml_fr=hxxgui_xml_fr.substitute(component_name=self.name)
       gui_xml_en=hxxgui_xml_en.substitute(component_name=self.name)
-      gui_salomeapp_gen=cppsalomeapp.substitute(module=self.name,
-                                                lmodule=self.name.lower(),
+      gui_salomeapp_gen=cppsalomeapp.substitute(module=module_name,
+                                                lmodule=module_name.lower(),
                                                 version="V0")
       # for a salome component generated by hxx2salome from a c++ component, 
       # the documentation points at the c++ component documentation
diff --git a/module_generator/hxxparacompo.py b/module_generator/hxxparacompo.py
index b093761..80aae50 100644
--- a/module_generator/hxxparacompo.py
+++ b/module_generator/hxxparacompo.py
@@ -355,7 +355,7 @@ void *th_%(serv_name)s(void *s)
         self.thread_func_decl.append(service_definition[serv]["thread_func_decl"])
         self.thread_str_decl.append(service_definition[serv]["thread_str_decl"])
 #    Includes="-I${"+name+"CPP_ROOT_DIR}/include"
-    Includes = os.path.join(cpp_path, "include")
+    Includes = os.path.dirname(hxxfileful)
 #    Libs="-L${"+name+"CPP_ROOT_DIR}/lib -l"+cpplibname
 #    Libs=[cpplibname+" PATH "+ os.path.join(cpp_path, "lib") ]
     Libs = [ Library( name=cpplibname, path=os.path.join(cpp_path, "lib"))]
diff --git a/script/hxx2salome.py b/script/hxx2salome.py
index 053e697..7c28d82 100755
--- a/script/hxx2salome.py
+++ b/script/hxx2salome.py
@@ -146,7 +146,7 @@ def hxx2salome(cppdir,
     # if a graphical user interface is required,
     # ask HXX2SALOMEComponent to generate template files
     if do_gui:
-        gui_files=salome_compo.getGUIfilesTemplate()
+        gui_files=salome_compo.getGUIfilesTemplate(salome_compo.name)
         g=Generator(Module(salome_compo.name,components=[salome_compo],
             prefix=module_root_dir,
             gui=gui_files),
