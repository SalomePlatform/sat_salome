--- opencv_ref/cmake/OpenCVCompilerOptions.cmake	2019-07-16 15:47:28.000000000 +0200
+++ opencv/cmake/OpenCVCompilerOptions.cmake	2019-07-18 11:27:06.006424613 +0200
@@ -6,7 +6,7 @@ if(ENABLE_CCACHE AND NOT CMAKE_COMPILER_
     get_property(__OLD_RULE_LAUNCH_COMPILE GLOBAL PROPERTY RULE_LAUNCH_COMPILE)
     if(__OLD_RULE_LAUNCH_COMPILE)
       message(STATUS "Can't replace CMake compiler launcher")
-    else()
+    else(__OLD_RULE_LAUNCH_COMPILE)
       set_property(GLOBAL PROPERTY RULE_LAUNCH_COMPILE "${CCACHE_PROGRAM}")
       # NOTE: Actually this check doesn't work as expected.
       # "RULE_LAUNCH_COMPILE" is ignored by CMake during try_compile() step.
@@ -14,14 +14,14 @@ if(ENABLE_CCACHE AND NOT CMAKE_COMPILER_
       set(IS_CCACHE_WORKS 1)
       if(IS_CCACHE_WORKS)
         set(CMAKE_COMPILER_IS_CCACHE 1)
-      else()
+      else(IS_CCACHE_WORKS)
         message(STATUS "Unable to compile program with enabled ccache, reverting...")
         set_property(GLOBAL PROPERTY RULE_LAUNCH_COMPILE "${__OLD_RULE_LAUNCH_COMPILE}")
-      endif()
-    else()
-      message(STATUS "Looking for ccache - not found")
-    endif()
-  endif()
+      endif(IS_CCACHE_WORKS)
+    endif(__OLD_RULE_LAUNCH_COMPILE)
+  else(CCACHE_PROGRAM)
+    message(STATUS "Looking for ccache - not found")
+  endif(CCACHE_PROGRAM)
 endif()
 
 if((CMAKE_COMPILER_IS_CLANGCXX OR CMAKE_COMPILER_IS_CLANGCC OR CMAKE_COMPILER_IS_CCACHE) AND NOT CMAKE_GENERATOR MATCHES "Xcode")
