--- openturns_ref/openturns-1.21/CMakeLists.txt	2023-09-22 12:27:24.290521494 +0200
+++ openturns_dev/openturns-1.21/CMakeLists.txt	2023-09-22 12:26:48.691883507 +0200
@@ -125,9 +125,17 @@
 
 set (CMAKE_CXX_STANDARD 11)
 
+SET(LAPACK_ROOT_DIR $ENV{LAPACK_ROOT_DIR})
+IF(LAPACK_ROOT_DIR)
+  LIST(APPEND CMAKE_PREFIX_PATH "${LAPACK_ROOT_DIR}")
+ENDIF(LAPACK_ROOT_DIR)
 if (NOT DEFINED LAPACK_LIBRARIES)
   find_package (LAPACK REQUIRED)
 endif ()
+IF (DEFINED CBLAS_LIBRARIES)
+  MESSAGE(STATUS "CBLAS_LIBRARIES is defined... adding to the list of libraries ${CBLAS_LIBRARIES}")
+  LIST (APPEND OPENTURNS_PRIVATE_LIBRARIES ${CBLAS_LIBRARIES})
+ENDIF()
 list (APPEND OPENTURNS_PRIVATE_LIBRARIES ${LAPACK_LIBRARIES})
 
 if (USE_SPECTRA)
@@ -181,6 +189,10 @@
 endif ()
 
 if (USE_TBB)
+  SET(TBB_ROOT_DIR $ENV{TBB_ROOT_DIR})
+  if(TBB_ROOT_DIR)
+    LIST(APPEND CMAKE_PREFIX_PATH "${TBB_ROOT_DIR}")
+  endif(TBB_ROOT_DIR)
   find_package (TBB CONFIG)
   if (TBB_FOUND)
     message (STATUS "Found TBB: ${TBB_DIR} (found version ${TBB_VERSION})")
@@ -235,6 +247,10 @@
 endif ()
 
 if (USE_LIBXML2)
+  SET(LIBXML2_ROOT_DIR $ENV{LIBXLM2_ROOT_DIR})
+  if(LIBXML2_ROOT_DIR)
+    LIST(APPEND CMAKE_PREFIX_PATH "${LIBXML2_ROOT_DIR}")
+  endif(LIBXML2_ROOT_DIR)
   find_package (LibXml2)
 endif ()
 if (LIBXML2_FOUND)
@@ -245,7 +261,19 @@
   list (APPEND OPENTURNS_ENABLED_FEATURES "libxml2")
 endif ()
 
+SET(MPI_ROOT_DIR $ENV{MPI_ROOT_DIR} CACHE PATH "Path to the MPI.")
+IF(MPI_ROOT_DIR)
+  LIST(APPEND CMAKE_PREFIX_PATH "${MPI_ROOT_DIR}")
+  find_package(MPI)
+  list (APPEND OPENTURNS_PRIVATE_INCLUDE_DIRS ${MPI_INCLUDE_DIRS})
+  list (APPEND OPENTURNS_PRIVATE_LIBRARIES ${MPI_LIBRARIES})
+ENDIF(MPI_ROOT_DIR)
+
 if (USE_HDF5)
+  SET(HDF5_ROOT_DIR $ENV{HDF5_ROOT_DIR} CACHE PATH "Path to the HDF5.")
+  IF(HDF5_ROOT_DIR)
+    LIST(APPEND CMAKE_PREFIX_PATH "${HDF5_ROOT_DIR}")
+  ENDIF(HDF5_ROOT_DIR)
   find_package(HDF5 COMPONENTS C CXX)
 endif ()
 if (HDF5_FOUND)
@@ -288,7 +316,13 @@
 endif ()
 
 if (USE_NLOPT)
-  find_package (NLopt CONFIG QUIET)
+  SET(NLOPT_ROOT_DIR $ENV{NLOPT_ROOT_DIR} CACHE PATH "Path to the NLOPT.")
+  IF (NOT NLOPT_ROOT_DIR)
+    MESSAGE(FATAL "NLOPT_ROOT_DIR environment variable not found!")
+  ENDIF()
+  MESSAGE(STATUS "NLOPT_ROOT_DIR = ${NLOPT_ROOT_DIR}")
+  FIND_PACKAGE(NLopt
+               HINTS "${NLOPT_ROOT_DIR}/lib/cmake/nlopt")
   if (NLopt_FOUND)
     message(STATUS "Found NLopt: ${NLopt_DIR}  (found version \"${NLopt_VERSION}\")")
   else ()
